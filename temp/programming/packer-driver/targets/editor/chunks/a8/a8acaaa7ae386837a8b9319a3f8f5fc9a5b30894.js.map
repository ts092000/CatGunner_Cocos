{"version":3,"sources":["file:///Users/ADMIN/Desktop/CatGunner_Github/CatGunner_Cocos/assets/Scripts/Loading/LoadingController.ts"],"names":["_decorator","Component","director","ProgressBar","tween","Constants","ccclass","property","LoadingController","type","gameClient","start","tweenLoadingAnim","progressBarLoading","to","progress","scheduleOnce","loadScene","MENU_SCENE","volumeMusicValue","volumeSoundValue"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,Q,OAAAA,Q;AAAsBC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,K,OAAAA,K;;AAC1DC,MAAAA,S,iBAAAA,S;;;;;;;;;AAET;OAEM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;mCAGjBQ,iB,WADZF,OAAO,CAAC,mBAAD,C,UAEHC,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEN;AAAP,OAAD,C,sCAFb,MACaK,iBADb,SACuCP,SADvC,CACiD;AAAA;AAAA;;AAAA;;AAAA,eAItCS,UAJsC;AAAA;;AAO3B,cAALC,KAAK,GAAmB;AACjC;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAIC,gBAAgB,GAAGR,KAAK,CAAC,KAAKS,kBAAN,CAAL,CAA+BC,EAA/B,CAAkC,CAAlC,EAAqC;AAACC,YAAAA,QAAQ,EAAE;AAAX,WAArC,CAAvB;AACAH,UAAAA,gBAAgB,CAACD,KAAjB;AACA,eAAKK,YAAL,CAAkB,YAAU;AACxBd,YAAAA,QAAQ,CAACe,SAAT,CAAmB;AAAA;AAAA,wCAAUC,UAA7B;AACH,WAFD,EAEG,CAFH;AAGH;;AAzC4C,O,UAK/BC,gB,GAA2B,G,UAC3BC,gB,GAA2B,G","sourcesContent":["import { _decorator, Component, director, find, Node, ProgressBar, tween } from 'cc';\nimport { Constants } from '../DataGame/Constants';\nimport { StoreAPI } from '../GameCenter/StoreAPI';\n// import GameClient from '@onechaintech/gamesdk-dev';\nimport { DataUser } from '../GameCenter/DataUser';\nconst { ccclass, property } = _decorator;\n\n@ccclass('LoadingController')\nexport class LoadingController extends Component {\n    @property({type: ProgressBar})\n    private progressBarLoading: ProgressBar;\n    \n    public gameClient;\n    public static volumeMusicValue: number = 0.7;\n    public static volumeSoundValue: number = 0.7;\n    public async start() : Promise<void> {\n        // let _this = this;\n        // let parameters = find(Constants.GAME_CLIENT);\n        \n        // if (parameters === null) {\n        //     let parameters = new Node(Constants.GAME_CLIENT);\n        //     if (this.gameClient === undefined) {\n        //         this.gameClient = new GameClient(\"65b242e14c61324e3898d071\", \"51a09d3a-aace-4978-9475-30fc49164df8\", window.parent, {dev: true});\n        //         await this.gameClient.initAsync()\n        //         .then(async (data) => {\n        //             //Get current user id\n        //             let userID = this.gameClient.user.citizen.getCitizenId();\n\n        //             //Get gamedata from server\n        //             await this.gameClient.user.data.getGameData().then((response: any) => {\n        //                 //Save data\n        //                 if (response.data[`${userID}`] !== undefined) DataUser.dataUser = response.data[`${userID}`];\n                        \n        //             }).catch(async (e) => {\n        //                 console.log('Error at get game data: ', e);\n        //             })\n\n        //             let gameClientParams = parameters.addComponent(StoreAPI);\n        //             gameClientParams.gameClient = this.gameClient;\n        //             director.addPersistRootNode(parameters);\n        //         })\n        //         .catch((err) => console.log(err));\n        //     }\n        // }\n        let tweenLoadingAnim = tween(this.progressBarLoading).to(1, {progress: 1})\n        tweenLoadingAnim.start();\n        this.scheduleOnce(function(){\n            director.loadScene(Constants.MENU_SCENE);\n        }, 1)\n    }\n}\n\n\n"]}