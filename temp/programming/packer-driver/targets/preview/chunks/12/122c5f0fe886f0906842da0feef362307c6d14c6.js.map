{"version":3,"sources":["file:///Users/ADMIN/Desktop/CatGunner_Github/CatGunner_Cocos/assets/Scripts/Game/EnemyController.ts"],"names":["_decorator","AnimationClip","Component","Node","Animation","RigidBody2D","Collider2D","Sprite","SpriteFrame","ProgressBar","Label","ccclass","property","EnemyController","type","speed","hp","maxHp","speedChase","moveLeft","hit","outHit","dead","canShoot","isShooting","isOutShooting","isReady","isReadyShoot","start","update","dt","moveEnemyLeft","moveEnemyRight","playIdleMove","animEnemyNode","active","animEnemyArr","play","deltaTime","posX","node","position","x","posY","y","setPosition","colliderEnemy","apply"],"mappings":"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","sourcesContent":["import { _decorator, AnimationClip, Component, Node, Animation, RigidBody2D, Collider2D, Sprite, SpriteFrame, ProgressBar, Label } from 'cc';\nimport { Constants } from '../DataGame/Constants';\nconst { ccclass, property } = _decorator;\n\n@ccclass('EnemyController')\nexport class EnemyController extends Component {\n    @property({type:[Node]})\n    public animEnemyNode: Node[] = [];\n\n    @property({type:[Animation]})\n    public animEnemyArr: Animation[] = [];\n\n    @property({type:[AnimationClip]})\n    public animClipEnemyArr: AnimationClip[] = [];\n\n    @property({type:RigidBody2D})\n    public rigidEnemy: RigidBody2D;\n\n    @property({type:Collider2D})\n    public colliderEnemy: Collider2D;\n\n    @property({type: Sprite})\n    public enemySprite: Sprite;\n\n    @property({type:[SpriteFrame]})\n    public enemySFArr: SpriteFrame[] = [];\n\n    @property({type: ProgressBar})\n    public enemyProgressBarHp: ProgressBar;\n\n    @property({type: Node})\n    public enemyNodeHp: Node;\n\n    @property({type: Node})\n    public enemyNodeLevelLabel: Node;\n\n    @property({type: Label})\n    public enemyLevelLabel: Label;\n\n    public speed = 150;\n    public hp: number = 0;\n    public maxHp: number = 0;\n    public speedChase = 0.75;\n    public moveLeft: boolean = true;\n    public hit: boolean = true;\n    public outHit: boolean = true;\n    public dead: boolean = false;\n    public canShoot: boolean = false;\n    public isShooting: boolean = true;\n    public isOutShooting: boolean = true;\n    public isReady: boolean = false;\n    public isReadyShoot: boolean = false;\n\n    protected start(): void {\n        // this.scheduleOnce(function(){\n        //     this.playIdleMove();\n        // }, 1)\n    }\n\n    protected update(dt: number): void {\n        if (this.moveLeft) {\n            this.moveEnemyLeft(dt);\n        }\n        else {\n            this.moveEnemyRight(dt)\n        }\n    }\n\n    private playIdleMove(): void {\n        this.animEnemyNode[0].active = true;\n        this.animEnemyArr[0].play();\n    }\n\n    public moveEnemyLeft(deltaTime: number) {\n        var posX = this.node.position.x;\n        var posY = this.node.position.y;\n\n        posX -= this.speed * deltaTime;\n\n        this.node.setPosition(posX, posY, 0.0);\n        this.colliderEnemy.apply();\n    }\n\n    public moveEnemyRight(deltaTime: number) {\n        var posX = this.node.position.x;\n        var posY = this.node.position.y;\n\n        posX += this.speed * deltaTime;\n\n        this.node.setPosition(posX, posY, 0.0);\n        this.colliderEnemy.apply();\n    }\n}\n\n\n"]}